<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.hemoo.aoifeMotan.dao.PasSalaryLevelMapper" >
  <resultMap id="BaseResultMap" type="org.hemoo.aoifeMotan.domain.PasSalaryLevel" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="salary_level_code" property="salaryLevelCode" jdbcType="VARCHAR" />
    <result column="grade_code" property="gradeCode" jdbcType="VARCHAR" />
    <result column="level_code" property="levelCode" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="DECIMAL" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, salary_level_code, grade_code, level_code, salary, seq, delete_flag, create_by, 
    create_time, update_by, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from pas_salary_level
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from pas_salary_level
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="org.hemoo.aoifeMotan.domain.PasSalaryLevel" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pas_salary_level (salary_level_code, grade_code, level_code, 
      salary, seq, delete_flag, 
      create_by, create_time, update_by, 
      update_time)
    values (#{salaryLevelCode,jdbcType=VARCHAR}, #{gradeCode,jdbcType=VARCHAR}, #{levelCode,jdbcType=VARCHAR}, 
      #{salary,jdbcType=DECIMAL}, #{seq,jdbcType=INTEGER}, #{deleteFlag,jdbcType=TINYINT}, 
      #{createBy,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.hemoo.aoifeMotan.domain.PasSalaryLevel" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pas_salary_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="salaryLevelCode != null" >
        salary_level_code,
      </if>
      <if test="gradeCode != null" >
        grade_code,
      </if>
      <if test="levelCode != null" >
        level_code,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="seq != null" >
        seq,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="salaryLevelCode != null" >
        #{salaryLevelCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeCode != null" >
        #{gradeCode,jdbcType=VARCHAR},
      </if>
      <if test="levelCode != null" >
        #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=DECIMAL},
      </if>
      <if test="seq != null" >
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.hemoo.aoifeMotan.domain.PasSalaryLevel" >
    update pas_salary_level
    <set >
      <if test="salaryLevelCode != null" >
        salary_level_code = #{salaryLevelCode,jdbcType=VARCHAR},
      </if>
      <if test="gradeCode != null" >
        grade_code = #{gradeCode,jdbcType=VARCHAR},
      </if>
      <if test="levelCode != null" >
        level_code = #{levelCode,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=DECIMAL},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hemoo.aoifeMotan.domain.PasSalaryLevel" >
    update pas_salary_level
    set salary_level_code = #{salaryLevelCode,jdbcType=VARCHAR},
      grade_code = #{gradeCode,jdbcType=VARCHAR},
      level_code = #{levelCode,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=DECIMAL},
      seq = #{seq,jdbcType=INTEGER},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>